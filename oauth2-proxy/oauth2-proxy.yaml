---
# Source: oauth2-proxy/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: oauth2-proxy    
    helm.sh/chart: oauth2-proxy-6.10.1
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: authentication-proxy
    app.kubernetes.io/part-of: oauth2-proxy
    app.kubernetes.io/name: oauth2-proxy
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "7.4.0"
  name: oauth2-proxy
automountServiceAccountToken : true
---
# Source: oauth2-proxy/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    app: oauth2-proxy    
    helm.sh/chart: oauth2-proxy-6.10.1
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: authentication-proxy
    app.kubernetes.io/part-of: oauth2-proxy
    app.kubernetes.io/name: oauth2-proxy
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "7.4.0"
  name: release-name-oauth2-proxy
spec:
  type: ClusterIP
  ports:
    - port: 4180
      targetPort: http
      protocol: TCP
      appProtocol: http
      name: http
    - port: 44180
      protocol: TCP
      appProtocol: http
      targetPort: metrics
      name: metrics
  selector:    
    app.kubernetes.io/name: oauth2-proxy
    app.kubernetes.io/instance: release-name
---
# Source: oauth2-proxy/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: oauth2-proxy    
    helm.sh/chart: oauth2-proxy-6.10.1
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: authentication-proxy
    app.kubernetes.io/part-of: oauth2-proxy
    app.kubernetes.io/name: oauth2-proxy
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "7.4.0"
  name: release-name-oauth2-proxy
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:      
      app.kubernetes.io/name: oauth2-proxy
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      annotations:
        checksum/config: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546b
        checksum/config-emails: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546b
        checksum/secret: e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
        checksum/google-secret: e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
        checksum/redis-secret: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546b
      labels:
        app: oauth2-proxy        
        helm.sh/chart: oauth2-proxy-6.10.1
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: authentication-proxy
        app.kubernetes.io/part-of: oauth2-proxy
        app.kubernetes.io/name: oauth2-proxy
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/version: "7.4.0"
    spec:
      serviceAccountName: oauth2-proxy
      automountServiceAccountToken : true
      containers:
      - name: oauth2-proxy
        image: "quay.io/oauth2-proxy/oauth2-proxy:v7.4.0"
        imagePullPolicy: IfNotPresent
        args:
          - --http-address=0.0.0.0:4180
          - --https-address=0.0.0.0:4443
          - --metrics-address=0.0.0.0:44180
          - --reverse-proxy=true
          - --config=/etc/oauth2_proxy/oauth2_proxy.cfg
        env:
        - name: OAUTH2_PROXY_CLIENT_ID
          valueFrom:
            secretKeyRef:
              name:  oauth2-proxy
              key: client-id
        - name: OAUTH2_PROXY_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              name:  oauth2-proxy
              key: client-secret
        - name: OAUTH2_PROXY_COOKIE_SECRET
          valueFrom:
            secretKeyRef:
              name:  oauth2-proxy
              key: cookie-secret
        ports:
          - containerPort: 4180
            name: http
            protocol: TCP
          - containerPort: 44180
            protocol: TCP
            name: metrics
        livenessProbe:
          httpGet:
            path: /ping
            port: http
            scheme: HTTP
          initialDelaySeconds: 15
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            path: /ping
            port: http
            scheme: HTTP
          initialDelaySeconds: 15
          timeoutSeconds: 5
          successThreshold: 1
          periodSeconds: 10
        resources:
          limits:
            cpu: 250m
            memory: 192Mi
          requests:
            cpu: 100m
            memory: 64Mi
        volumeMounts:
        - mountPath: /etc/oauth2_proxy/oauth2_proxy.cfg
          name: configmain
          subPath: oauth2_proxy.cfg
        - mountPath: /etc/oauth2-proxy-template
          name: html-template
        securityContext:
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          runAsUser: 2000
      volumes:
      - configMap:
          defaultMode: 420
          name: oauth2-proxy-config
        name: configmain
      - configMap:
          name: oauth2-proxy-html-template
        name: html-template
      tolerations:
        []
---
# Source: oauth2-proxy/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  labels:
    app: oauth2-proxy    
    helm.sh/chart: oauth2-proxy-6.10.1
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: authentication-proxy
    app.kubernetes.io/part-of: oauth2-proxy
    app.kubernetes.io/name: oauth2-proxy
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "7.4.0"
  name: release-name-oauth2-proxy
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    external-dns.alpha.kubernetes.io/target: ipv4.nidr0x.win
    kubernetes.io/ingress.class: traefik
spec:
  rules:
    - host: "sso.nidr0x.win"
      http:
        paths:
          - path: /
            pathType: ImplementationSpecific
            backend:
              service:
                name: release-name-oauth2-proxy
                port:
                  number: 4180
  tls:
    - hosts:
      - '*.nidr0x.win'
      secretName: letsencrypt-prod
